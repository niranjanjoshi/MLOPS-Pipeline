name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip" # Cache pip packages

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8 black pytest

      - name: Lint with flake8
        run: |
          echo "Running flake8 lint checks..."
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics  # syntax errors
          flake8 src --count --max-complexity=10 --max-line-length=88 --statistics # style

      - name: Check formatting with Black
        run: |
          echo "Checking code formatting..."
          black --check src

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t niranjanjoshi14/housing-api:latest .

      - name: Push Docker image
        run: docker push niranjanjoshi14/housing-api:latest

      - name: Check .gitignore to avoid large files
        run: |
          echo "Checking for unwanted files in repo..."
          test ! -d .mlruns || (echo ".mlruns found, please add to .gitignore" && exit 1)
          test ! -d venv || (echo "venv found, please add to .gitignore" && exit 1)
          test ! -d src/__pycache__ || (echo "__pycache__ found, please add to .gitignore" && exit 1)

      - name: Run training
        run: |
          python src/train.py

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q || echo "No tests found"

      - name: Build Docker image
        run: |
          docker build -t housing-api .
